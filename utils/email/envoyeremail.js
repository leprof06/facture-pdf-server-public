// sendMail.js
import nodemailer from "nodemailer";
import fs from "fs";
import path from "path";
import dotenv from "dotenv";

dotenv.config();

const transporter = nodemailer.createTransport({
  service: "Outlook365",
  auth: {
    user: process.env.OUTLOOK_USER,
    pass: process.env.OUTLOOK_PASS,
  },
});

export async function sendMailWithAttachment(to, subject, text, attachmentPath) {
  const mailOptions = {
    from: process.env.OUTLOOK_USER,
    to,
    subject,
    text,
    attachments: [
      {
        filename: path.basename(attachmentPath),
        path: attachmentPath,
      },
    ],
  };

  await transporter.sendMail(mailOptions);
  console.log(`üì© Mail envoy√© √† ${to}`);
}

export async function sendNoCreditsAlert(to, nom) {
  const mailOptions = {
    from: process.env.OUTLOOK_USER,
    to,
    subject: "‚õî Cr√©dits √©puis√©s",
    text: `Bonjour ${nom},\n\nVous avez utilis√© tous vos cr√©dits de cours. Merci de renouveler votre abonnement pour continuer √† r√©server.\n\n**`,
  };

  await transporter.sendMail(mailOptions);
  console.log(`üì© Alerte cr√©dits √† 0 envoy√©e √† ${to}`);
}

export async function sendAdminAlertForZeroCredit(clientNom, clientEmail) {
  const mailOptions = {
    from: process.env.OUTLOOK_USER,
    to: process.env.OUTLOOK_USER,
    subject: `‚ö†Ô∏è ${clientNom} n'a plus de cr√©dit`,
    text: `L'utilisateur ${clientNom} (${clientEmail}) est √† 0 cr√©dit.`,
  };

  await transporter.sendMail(mailOptions);
  console.log(`üì© Alerte admin pour ${clientNom} envoy√©e`);
}

export async function sendReservationConfirmation(to, nom, date, creditsRestants) {
  const mailOptions = {
    from: process.env.OUTLOOK_USER,
    to,
    subject: "üìÖ Confirmation de r√©servation",
    text: `Bonjour ${nom},\n\nVotre cours a bien √©t√© r√©serv√© pour le ${date}.\nIl vous reste ${creditsRestants} cr√©dit(s).\n\nMerci de votre confiance !\n**`,
  };

  await transporter.sendMail(mailOptions);
  console.log(`üì© Confirmation de r√©servation envoy√©e √† ${to}`);
}

export async function sendRenewalNotification(to, nom, creditsAjoutes) {
  const mailOptions = {
    from: process.env.OUTLOOK_USER,
    to,
    subject: "üîÑ Cr√©dits renouvel√©s",
    text: `Bonjour ${nom},\n\nVotre compte a √©t√© recharg√© avec ${creditsAjoutes} cr√©dits.\n\nVous pouvez d√®s maintenant r√©server vos prochains cours !\n\n√Ä tr√®s vite,\n**`,
  };

  await transporter.sendMail(mailOptions);
  console.log(`üì© Notification de renouvellement envoy√©e √† ${to}`);
}
